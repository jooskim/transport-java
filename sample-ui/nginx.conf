worker_processes  1;

error_log  /dev/stdout info;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format    main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

    access_log    /dev/stdout main;

    # splits the request URI to get the resource name.
    # Ex. https://example.com/test.html, then $resource_name = test.html
    # this is used to proxy static files correctly.
    map $request_uri $resource_name {
      ~/(?<captured_resource_name>[^/]*)$ $captured_resource_name;
    }

    map $http_upgrade $connection_upgrade {
            default upgrade;
            '' close;
        }


    server {
        listen       80;
        root         /opt/app/dist;
        index        index.html;

        location / {
            try_files $uri /index.html;
        }

        # health route
        location /health {
            add_header X-Robots-Tag noindex;
            default_type text/plain;
            return 200 'success';
        }

        #### Bifr√∂st/fabric endpoint ####
        location /fabric {
            proxy_pass http://appfabric-service:8090;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

    }

    include servers/*;
}
