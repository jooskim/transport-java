image: appfabric-service.artifactory.eng.vmware.com/appfabric-build:1.2

services:
- name: docker:dind

stages:
- test
- build
- publish

cache: {}

test:unit:
  stage: test
  script:
  - echo "Run unit tests"
  - cd ./java
  - ./gradlew test jacocoTestReport
  - cd ./csp
  - ./gradlew test jacocoTestReport
  - ../../scripts/codecoverage.sh

  artifacts:
    paths:
    - java/build/reports/jacoco/

    expire_in: 1 week
  when: always
  only:
  - pushes
  - web

build:bifrost:
  stage: build
  script:
  - echo "Building vmw-bifrost"
  - cd ./java
  - ./gradlew assemble
  - echo "Building vmw-bifrost-csp"
  - cd ./csp
  - ./gradlew assemble
  - echo "Building vmw-bifrost-rabbitmq"
  - cd ../rabbitmq
  - ./gradlew assemble
  - echo "Building vmw-bifrost-kafka"
  - cd ../kafka
  - ./gradlew assemble
  - echo "Building vmw-bifrost-message-fabric"
  - cd ../message-fabric
  - ./gradlew assemble
  artifacts:
    paths:
    - java/build/libs
    - java/csp/build/libs
    - java/rabbitmq/build/libs
    - java/kafka/build/libs
    - java/message-fabric/build/libs
    expire_in: 1 week
  when: on_success
  only:
  - pushes
  - web

build:ui:
  stage: build
  tags:
  - use-docker
  variables:
    ENV: prd
  script:
  - npm --unsafe-perm --prefix sample-ui install
  - ./scripts/run-unittests.sh ci
  - ./scripts/build-ui.sh
  artifacts:
    paths:
    - sample-ui/dist
    expire_in: 1 week
  when: on_success
  only:
  - pushes
  - web

publish:bifrost:
  stage: publish
  dependencies:
  - build:bifrost
  script:
  - echo "Publishing vmw-bifrost"
  - cd ./java
  - ./gradlew publish -PbuildType=snapshot
  when: on_success
  only:
  - master

publish:bifrost-csp:
  stage: publish
  dependencies:
  - build:bifrost
  script:
  - echo "Publishing vmw-bifrost-csp"
  - cd ./java/csp
  - ./gradlew publish -PbuildType=snapshot
  when: on_success
  only:
  - master

publish:bifrost-rabbitmq:
  stage: publish
  dependencies:
  - build:bifrost
  script:
  - echo "Publishing vmw-bifrost-rabbitmq"
  - cd ./java/rabbitmq
  - ./gradlew publish -PbuildType=snapshot
  when: on_success
  only:
  - master

publish:bifrost-kafka:
  stage: publish
  dependencies:
  - build:bifrost
  script:
  - echo "Publishing vmw-bifrost-kafka"
  - cd ./java/kafka
  - ./gradlew publish -PbuildType=snapshot
  when: on_success
  only:
  - master

publish:bifrost-message-fabric:
  stage: publish
  dependencies:
  - build:bifrost
  script:
  - echo "Publishing vmw-bifrost-message-fabric"
  - cd ./java/message-fabric
  - ./gradlew publish -PbuildType=snapshot
  when: on_success
#  only:
#  - master

publish:appfabric:
  stage: publish
  tags:
  - use-docker
  variables:
    DOCKER_HOST: "tcp://docker:2375"
    TARGET_TAG: ${CI_PIPELINE_ID}
  dependencies:
  - build:ui
  script:
  # since UI artifacts are already passed from the previous job we're not building UI here
  - ./scripts/build-server.sh
  - ./scripts/build-image.sh -p appfabric -t ${TARGET_TAG}
  - ./scripts/configure-artifactory.sh
  # publish images to the registry
  - docker push ${REGISTRY_PREFIX}/appfabric-ui:${TARGET_TAG}
  - docker push ${REGISTRY_PREFIX}/appfabric-service:${TARGET_TAG}
  - ./scripts/deploy-ui.sh
  when: on_success
  only:
  - master

