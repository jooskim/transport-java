buildscript {
    ext {
        springBootVersion = '2.1.4.RELEASE'
    }
    repositories {
        maven { url "http://build-squid.eng.vmware.com/nexus/content/groups/repo" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "gradle.plugin.com.github.onslip:gradle-one-jar:1.0.5"
    }
}

// Configure latest Lombok
plugins {
    id 'io.franzbecker.gradle-lombok' version '1.14'
}
apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'com.github.onslip.gradle-one-jar'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'
apply plugin: 'jacoco'

def profiles = 'prod'

group = 'com.vmware.bifrost'
sourceCompatibility = 1.8

initProperties()

ext.bifrost_version = "[0.0.19,1.0.0)"

jar {
    enabled = true
    from sourceSets.main.output
    include 'com/vmware/bifrost/**/*'

    manifest {
        attributes (
                'Bundle-Name': 'Bifrost-Message-Fabric',
                'Bundle-Version': version,
                'Bundle-SymbolicName': 'com.vmware.bifrost.messageFabric',
                'Import-Package': 'org.springframework.beans.factory,' +
                        'org.springframework.beans,' +
                        'org.springframework.beans.factory.annotation,' +
                        'org.springframework.web.socket.config.annotation,' +
                        'org.slf4j,' +
                        'com.vmware.bifrost.broker,' +
                        'com.vmware.atlas.message.client.listener,' +
                        'com.vmware.atlas.message.client.listener.impl,' +
                        'com.vmware.atlas.message.client.model.enums,' +
                        'com.vmware.atlas.message.client.service,' +
                        'org.springframework.util',
                'Export-Package': "com.vmware.bifrost.broker.messageFabric;version=$version"
        )
    }
}

task buildAppJar(type: Jar) {
    classifier "messageFabricApp"
    from sourceSets.main.output
}

task buildBootJar(type: OneJar) {
    dependsOn buildAppJar, build
    baseJar = buildAppJar
    mainClass = 'messageFabric.Application'
    archiveName = 'messageFabricSampleApp.jar'
}

repositories {
    maven { url "http://build-squid.eng.vmware.com/nexus/content/groups/repo" }
    maven { url "http://build-artifactory.eng.vmware.com/artifactory/atlas-snapshot-maven" }
}

// Maven artifact publishing using the maven-publish plugin.
publishing {
    publications {
        // Publishes
        mavenJava(MavenPublication) {
            // Publishes a POM to maven repo.
            from components.java
        }
    }

    repositories {
        maven {
            // To publish to the build-artifactory:
            //
            // 1. Ensure you have write access to the bifrost-maven-local repo.
            // 2. Update the version in "version.txt" file.
            // 3. Run "gradlew publish" task by specifying your credentials using the
            //    mavenUser and mavenPassword gradle properties. This can be done via:
            //       - command line arguments - "gradlew publish -PmavenUser=user -PmavenPassword=password"
            //       - the local gradle.properties file, usually located in USER_HOME/.gradle/gradle.properties
            //
            // To test you changes during development, you can publish project's jars
            // to your maven local repo by running "gradlew publishToMavenLocal" task.
            credentials {
                username mavenUser
                password mavenPassword
            }
            name = 'build-artifactory'
            url = "https://build-artifactory.eng.vmware.com/artifactory/bifrost-maven-local"
        }
    }
}

dependencies {
    implementation "com.vmware.bifrost:vmw-bifrost:$bifrost_version"
    runtime "com.vmware.bifrost:vmw-bifrost:$bifrost_version"

    compile "com.vmware.atlas:message-client:0.1.3-SNAPSHOT"

    // Force using spring framework 5.1.4 dependencies
    // This is is needed because Atlas message client uses springboot 2.1.4
    // while the core Bifrost project uses springboot 1.5.18.
    compile "org.springframework.boot:spring-boot-starter-web:2.1.4.RELEASE"
    compile "org.springframework.boot:spring-boot-starter-websocket:2.1.4.RELEASE"
    compile "org.springframework.security:spring-security-web:5.1.4.RELEASE"
    compile "org.springframework.security:spring-security-config:5.1.4.RELEASE"

    testImplementation 'org.mockito:mockito-core:2.+'
    testImplementation 'org.powermock:powermock-module-junit4:1.7.4'
    testImplementation("junit:junit")
}

jacoco {
    toolVersion = "0.8.0"
}

jacocoTestReport {
    reports {
        xml.enabled false
        html.enabled true
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['messageFabricApp/**',
                              'messageFabricSamples/**'])
        })
    }
}

void initProperties() {
    version = rootProject.file('version.txt').getText('UTF-8').trim()
    if ("snapshot".compareTo(buildType) == 0) {
        version = version + "-SNAPSHOT"
    } else if ("release".compareTo(buildType) == 0) {
        version = version + "-RELEASE"
    }

    if (System.getenv("bifrost_maven_user")?.trim()) {
        mavenUser = System.getenv("bifrost_maven_user").trim()
    }

    if (System.getenv("bifrost_maven_password")?.trim()) {
        mavenPassword = System.getenv("bifrost_maven_password").trim()
    }
}
